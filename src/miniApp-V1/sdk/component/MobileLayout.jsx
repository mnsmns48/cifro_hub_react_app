import { useState } from 'react';
import { TabBar } from 'antd-mobile';
import {
    HomeOutlined,
    HeartOutlined,
    ShoppingCartOutlined,
    UserOutlined,
    ShoppingOutlined,
} from '@ant-design/icons';
import { useTheme } from '../theme/useTheme.js';
import useTelegramEnvironment from '../hook/useTelegramEnvironment.jsx';
import TelegramDebugPanel from "./TelegramDebugPanel.jsx";

const MobileLayout = () => {
    const { viewportHeight, safeTop, safeBottom } = useTelegramEnvironment();
    const [activeTab, setActiveTab] = useState('home');
    const theme = useTheme();

    const topBarHeight = Math.round(safeTop);
    const bottomPadding = Math.round(safeBottom + 12);

    const showDebugPanel = activeTab === 'favorites'; // ‚≠ê NEW

    return (
        <div
            style={{
                height: viewportHeight,
                width: '100vw',
                display: 'flex',
                flexDirection: 'column',
                backgroundColor: theme.colorBackground,
                overflow: 'hidden',
                boxSizing: 'border-box',
                position: "relative" // ‚≠ê NEW
            }}
        >

            {/* –í–µ—Ä—Ö–Ω—è—è –∑–æ–Ω–∞ */}
            {!showDebugPanel && ( // ‚≠ê —Å–∫—Ä—ã–≤–∞–µ–º, –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç DebugPanel
                <div
                    style={{
                        height: topBarHeight,
                        width: '100%',
                        backgroundColor: '#000',
                        zIndex: 1000,
                        flex: '0 0 auto',
                    }}
                />
            )}

            {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
            {!showDebugPanel && ( // ‚≠ê —Å–∫—Ä—ã–≤–∞–µ–º, –µ—Å–ª–∏ DebugPanel –æ—Ç–∫—Ä—ã—Ç
                <div
                    style={{
                        flex: 1,
                        overflowY: 'auto',
                        paddingLeft: theme.spacingMd,
                        paddingRight: theme.spacingMd,
                        paddingTop: 16,
                        paddingBottom: 16,
                        color: theme.colorText,
                        fontSize: theme.fontSizeLg,
                        fontWeight: theme.fontWeightBold,
                        display: 'flex',
                        justifyContent: 'start',
                        textAlign: 'start',
                    }}
                >
                    {activeTab === 'home' && <h1 style={{ margin: 0 }}>–ì–ª–∞–≤–Ω–∞—è</h1>}
                    {activeTab === 'cart' && <h1 style={{ margin: 0 }}>–ö–æ—Ä–∑–∏–Ω–∞</h1>}
                    {activeTab === 'purchases' && <h1 style={{ margin: 0 }}>–ü–æ–∫—É–ø–∫–∏</h1>}
                    {activeTab === 'profile' && <h1 style={{ margin: 0 }}>–ü—Ä–æ—Ñ–∏–ª—å</h1>}
                </div>
            )}

            {/* FOOTER */}
            {!showDebugPanel && ( // ‚≠ê —Å–∫—Ä—ã–≤–∞–µ–º TabBar
                <div
                    style={{
                        borderTop: `1px solid ${theme.colorBorder}`,
                        backgroundColor: theme.colorCard,
                        paddingBottom: bottomPadding,
                        flex: '0 0 auto',
                    }}
                >
                    <TabBar activeKey={activeTab} onChange={setActiveTab}>
                        <TabBar.Item key="home" title="–ì–ª–∞–≤–Ω–∞—è" icon={<HomeOutlined />} />
                        <TabBar.Item key="favorites" title="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" icon={<HeartOutlined />} />
                        <TabBar.Item key="purchases" title="–ü–æ–∫—É–ø–∫–∏" icon={<ShoppingOutlined />} />
                        <TabBar.Item key="cart" title="–ö–æ—Ä–∑–∏–Ω–∞" icon={<ShoppingCartOutlined />} />
                        <TabBar.Item key="profile" title="–ü—Ä–æ—Ñ–∏–ª—å" icon={<UserOutlined />} />
                    </TabBar>
                </div>
            )}

            {/* üß© FULLSCREEN DEBUG PANEL */}
            {showDebugPanel && (
                <div
                    style={{
                        position: "absolute",
                        top: 0,
                        left: 0,
                        right: 0,
                        bottom: 0,
                        zIndex: 999999,
                        backgroundColor: "#000",
                        paddingTop: topBarHeight,
                        overflowY: "auto",
                    }}
                >
                    <TelegramDebugPanel />
                </div>
            )}
        </div>
    );
};

export default MobileLayout;